{"version":3,"sources":["components/button-section/styles.js","components/button-section/buy-section/styles.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","absolutePath.js","components/button-section/buy-section/index.js","components/button-section/buy-section/BuySection.jsx","redux/blockchain/blockchainActions.js","components/connect-section/ConnectSection.js","components/connect-section/styles.js","components/connect-section/index.js","components/button-section/index.js","components/button-section/ButtonSection.jsx","App.js","index.js"],"names":["ButtonSectionContainer","styled","div","Mintable","strong","WarningMessage","p","BuyContainer","BuyInput","input","button","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","cost","supply","totalSupply","numAva","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","maxSupply","call","currentSupply","numAvailableToMint","console","log","mainContract","JSON","parse","mainContractAbi","BuySection","useDispatch","useSelector","useState","claimingNft","setClaimingNft","amount","setAmount","getData","useEffect","className","placeholder","value","onChange","e","parseInt","target","isNaN","onClick","preventDefault","mintAmount","price","BigInt","totalCostWei","String","totalGasLimit","mint","Number","send","to","CONTRACT_ADDRESS","from","once","err","then","receipt","claimNFTs","connectFailed","updateAccount","ConnectSection","abi","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","ButtonSection","useMemo","App","props","document","getElementById","ReactDOM","render"],"mappings":"2ZACaA,EAAyBC,IAAOC,IAAV,qPAWtBC,EAAWF,IAAOG,OAAV,sDAGRC,EAAiBJ,IAAOK,EAAV,sM,iBCbdC,EAAeN,IAAOC,IAAV,kQAaZM,EAAWP,IAAOQ,MAAV,iS,GAeKR,IAAOS,OAAV,0Y,iDC9BjBC,EAAe,CACjBC,SAAS,EACTC,QAAS,KACTC,cAAe,KACfC,KAAM,KACNC,SAAU,IAkCGC,EA/BW,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFT,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFM,GADL,IAEEN,SAAS,EACTC,QAASM,EAAOE,QAAQR,QACxBC,cAAeK,EAAOE,QAAQP,cAC9BC,KAAMI,EAAOE,QAAQN,OAEzB,IAAK,oBACH,OAAO,2BACFJ,GADL,IAEEC,SAAS,EACTI,SAAUG,EAAOE,UAErB,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEL,QAASM,EAAOE,QAAQR,UAE5B,QACE,OAAOK,ICnCTP,EAAe,CACjBC,SAAS,EACTU,KAAK,EACLC,OAAQ,EACRC,YAAY,EACZC,OAAQ,EACRC,OAAO,EACPV,SAAU,IAmCGW,EAhCK,WAAmC,IAAlCT,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEN,SAAS,EACTc,OAAO,EACPV,SAAU,KAEd,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEN,SAAS,EACTY,YAAYL,EAAOE,QAAQG,YAC3BF,KAAMH,EAAOE,QAAQC,KACrBC,OAAQJ,EAAOE,QAAQE,OACvBE,OAAQN,EAAOE,QAAQI,OACvBC,OAAO,EACPV,SAAU,KAEd,IAAK,oBACH,OAAO,2BACFL,GADL,IAEEC,SAAS,EACTc,OAAO,EACPV,SAAUG,EAAOE,UAErB,QACE,OAAOH,IC/BTU,EAAcC,YAAgB,CAClCC,WAAYb,EACZc,KAAMJ,IAGFK,EAAa,CAACC,KACdC,EAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,IAQrCK,EALNC,YAAYV,EAAaM,GCA5BK,EAAkB,SAAClB,GACvB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAIAmB,EAAY,SAAC3B,GACxB,8CAAO,WAAO4B,GAAP,qBAAAC,EAAA,6DACLD,EArBK,CACLrB,KAAM,uBAmBD,kBAKuBiB,EACvBM,WACAb,WAAWhB,cAAc8B,QAAQC,YAAYC,OAP7C,cAKGtB,EALH,gBAQkBa,EAAMM,WACxBb,WAAWhB,cAAc8B,QAAQG,gBAAgBD,OATjD,cAQGvB,EARH,iBAUgBc,EAChBM,WACAb,WAAWhB,cAAc8B,QAAQtB,OAAOwB,OAZxC,eAUGxB,EAVH,iBAakBe,EAAMM,WACxBb,WAAWhB,cAAc8B,QAAQI,mBAAmBnC,GAASiC,OAd7D,QAaGrB,EAbH,OAeHgB,EA7BG,CACLrB,KAAM,qBACNC,QA4BqB,CACfG,cACAD,SACAD,OACAG,YApBD,kDAwBHwB,QAAQC,IAAR,MACAT,EAASF,EAAgB,uCAzBtB,0DAAP,uDCvBWY,EAAeC,KAAKC,MAAM,sEAE1BC,EAAkBF,KAAKC,MAAM,2vQ,QCD3BE,ECGI,WAEjB,IAAMd,EAAWe,cACX1B,EAAa2B,aAAY,SAACvC,GAAD,OAAWA,EAAMY,cAC1CC,EAAO0B,aAAY,SAACvC,GAAD,OAAWA,EAAMa,QAC1C,EAAsC2B,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,KAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAU,WACa,KAAvBjC,EAAWjB,SAA+C,OAA7BiB,EAAWhB,eAC1C2B,EAASD,EAAUV,EAAWjB,WAGlCmD,qBAAU,WACRD,MACC,CAACjC,EAAWjB,UA+Bf,OACE,eAACN,EAAD,WACE,cAACC,EAAD,CACEyD,UAAW,YACXC,YAAc,aACdC,MAAkB,MAAXN,EAAiB,GAAKA,EAC7BO,SAAU,SAACC,GACTpB,QAAQC,IAAInB,EAAMuC,SAASD,EAAEE,OAAOJ,OAAUG,SAASvC,EAAKN,SAAW6C,SAASD,EAAEE,OAAOJ,OAAQG,SAASD,EAAEE,OAAOJ,OAASG,SAASvC,EAAKR,SAAY+C,SAASvC,EAAKP,cACjKO,IAASyC,MAAMH,EAAEE,OAAOJ,QAAYG,SAASvC,EAAKN,SAAW6C,SAASD,EAAEE,OAAOJ,QAAUG,SAASD,EAAEE,OAAOJ,OAASG,SAASvC,EAAKR,SAAY+C,SAASvC,EAAKP,cAC/JsC,EAAUO,EAAEE,OAAOJ,OACG,KAAnBE,EAAEE,OAAOJ,OAAcL,EAAU,QAGxC,qBAAKG,UAAW,8BACdQ,QAAS,SAACJ,GACRA,EAAEK,kBAEgB,IAAhBf,GA/CQ,WAChB,IAAMgB,EAAaL,SAAST,GAC5B,GAAmB,IAAfc,GAAqBA,EAAzB,CAEA,IAAIrD,EAAOS,EAAKT,KAEZsD,EAAQC,OAAOvD,EAAOuC,GACtBiB,EAAeC,OAAOH,GACtBI,EAAgBD,OAHL,IAGuBJ,GACtC1B,QAAQC,IAAI,SAAU4B,GACtB7B,QAAQC,IAAI,cAAe8B,GAC3BpB,GAAe,GACf9B,EAAWhB,cAAc8B,QACtBqC,KAAKC,OAAOrB,IACZsB,KAAK,CACJC,GAAIjC,EAAakC,iBACjBC,KAAMxD,EAAWjB,QACjBsD,MAAOW,IAERS,KAAK,SAAS,SAACC,GACdvC,QAAQC,IAAIsC,GACZ5B,GAAe,MAEhB6B,MAAK,SAACC,GACLzC,QAAQC,IAAIwC,GACZ9B,GAAe,GACfnB,EAASD,EAAUV,EAAWjB,aAElCkD,KAmBgC4B,IAJ9B,SAQE,wBAAQ1B,UAAU,YAAlB,wB,mCCpDF2B,EAAgB,SAACvE,GACrB,MAAO,CACLD,KAAM,oBACNC,QAASA,IA6DAwE,EAAgB,SAAChF,GAC5B,8CAAO,WAAO4B,GAAP,SAAAC,EAAA,sDACLD,EA1DK,CACLrB,KAAM,iBACNC,QAwD8B,CAAER,QAASA,KACzC4B,EAASD,EAAU3B,IAFd,2CAAP,uDC1DaiF,GCzBuB7F,IAAOS,OAAV,2WAeFT,IAAOK,EAAV,iIDZP,WACnB,IAAMmC,EAAWe,cACX1B,EAAa2B,aAAY,SAACvC,GAAD,OAAWA,EAAMY,cAC1CiC,EAAU,WACe,KAAvBjC,EAAWjB,SAA+C,OAA7BiB,EAAWhB,eACxC2B,EAASD,EAAUV,EAAWjB,WAMxC,OAHEmD,qBAAU,WACND,MACD,CAACjC,EAAWjB,UAEf,qBAAKoD,UAAW,8BAA8BQ,QAAW,SAACJ,GACtDA,EAAEK,iBACFjC,EDgBN,uCAAO,WAAOA,GAAP,2BAAAC,EAAA,yDACLD,EA5BK,CACLrB,KAAM,uBA4BA2E,EAAMzC,EACN0C,EAAS7C,EAHV,EAIgB8C,SAAbC,EAJH,EAIGA,YACgCA,EAASC,WAL5C,wBAOHC,IAAgBC,YAAYH,GACxBnF,EAAO,IAAIuF,IAAKJ,GARjB,mBAUsBA,EAASK,QAAQ,CACtCC,OAAQ,wBAXT,eAUKC,EAVL,iBAauBP,EAASK,QAAQ,CACvCC,OAAQ,gBAdT,QHjCsB,OGiCtB,QAiBOE,EAAmB,IAAIN,IAC3BL,EACAC,EAAOX,kBAET5C,EA1CD,CACLrB,KAAM,qBACNC,QAyCuB,CACbR,QAAS4F,EAAS,GAClB3F,cAAe4F,EACf3F,KAAMA,KAKVmF,EAASS,GAAG,mBAAmB,SAACF,GAC9BhE,EAASoD,EAAcY,EAAS,QAElCP,EAASS,GAAG,gBAAgB,WAC1BV,OAAOW,SAASC,aAIlBpE,EAASmD,EAAc,+BAtCxB,kDAyCDnD,EAASmD,EAAc,0BAzCtB,gCA4CHnD,EAASmD,EAAc,sBA5CpB,0DAAP,uDCfM7B,KAHJ,SAKI,wBAAQE,UAAU,YAAlB,yBEpBO6B,ICAAgB,ECGO,WAClB,IAAM/E,EAAO0B,aAAY,SAAAvC,GAAK,OAAGA,EAAMa,QACjCP,EAAcuF,mBAAQ,WACxB,OAAOhF,EAAKP,cACd,CAACO,IACGD,EAAa2B,aAAY,SAACvC,GAAD,OAAWA,EAAMY,cAEpD,OAAIA,EAAWjB,QASX,eAACb,EAAD,WACI,cAACG,EAAD,CAAU8D,UAAW,YAArB,gCAAmDlC,EAAKN,OAAxD,gBACA,cAAC,EAAD,CAAYoB,UAZE,IAYsBrB,YAAeA,OATvD,eAACxB,EAAD,WACI,cAAC,EAAD,IACC8B,EAAWd,UAAY,cAACX,EAAD,UAAiByB,EAAWd,eCP7CgG,EAPH,SAACC,GACX,OACE,qBAAKhD,UAAU,MAAf,SACI,cAAC,EAAD,OCALiD,SAASC,eAAe,kBAC3BC,IAASC,OACP,cAAC,IAAD,CAAUhF,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF6E,SAASC,eAAe,oB","file":"static/js/main.7572ec20.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nexport const ButtonSectionContainer = styled.div`\r\n    width:100%;\r\n    min-height:50px;\r\n    display:flex;\r\n    justify-content:center;\r\n    flex-direction: column;\r\n    background: transparent;\r\n    align-items:center;\r\n    padding:10px ;\r\n    padding-bottom:30px;\r\n`;\r\nexport const Mintable = styled.strong`\r\n    margin-bottom: 10px;\r\n`;\r\nexport const WarningMessage = styled.p`\r\n    color:white!important;\r\n    font-size:20px;\r\n    text-align:center;\r\n    background-color:transparent;\r\n    margin:0;\r\n    padding:3px 4px;\r\n    letter-spacing:1px;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const BuyContainer = styled.div`\r\n    display:flex;\r\n    gap:10px;\r\n    justify-content:center;\r\n    align-items:center;\r\n    padding:5px 20px;\r\n    margin:0;\r\n    width:100%;\r\n    @media screen and (max-width:500px)\r\n    {\r\n        flex-direction:column;\r\n    }\r\n`;\r\nexport const BuyInput = styled.input`\r\n    text-align:center;\r\n    padding:15px 10px;\r\n    width:150px;\r\n    height:60px;\r\n    border:0;\r\n    font-size:28px;\r\n    color:white!important;\r\n    outline:0;\r\n    border-radius:15px;\r\n    background-color:#ce8b20;\r\n    &:hover{\r\n        outline:0;\r\n    }\r\n`;\r\nexport const MintButton = styled.button`\r\n      border-radius: 10px;\r\n    padding:15px 50px;\r\n    border:0;\r\n    outline:0;\r\n    color:white!important;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    background-image: linear-gradient(to bottom,rgba(255,255,255,.2) 0,rgba(255,255,255,.01) 100%);\r\n    background-color: #2a2a2a;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`;","const initialState = {\r\n    loading: false,\r\n    account: null,\r\n    smartContract: null,\r\n    web3: null,\r\n    errorMsg: \"\",\r\n  };\r\n  \r\n  const blockchainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"CONNECTION_REQUEST\":\r\n        return {\r\n          ...initialState,\r\n          loading: true,\r\n        };\r\n      case \"CONNECTION_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          account: action.payload.account,\r\n          smartContract: action.payload.smartContract,\r\n          web3: action.payload.web3,\r\n        };\r\n      case \"CONNECTION_FAILED\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          errorMsg: action.payload,\r\n        };\r\n      case \"UPDATE_ACCOUNT\":\r\n        return {\r\n          ...state,\r\n          account: action.payload.account,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default blockchainReducer;","const initialState = {\r\n    loading: false,\r\n    cost:0,\r\n    supply: 0,\r\n    totalSupply:0,\r\n    numAva: 0,\r\n    error: false,\r\n    errorMsg: \"\",\r\n  };\r\n  \r\n  const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"CHECK_DATA_REQUEST\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: false,\r\n          errorMsg: \"\",\r\n        };\r\n      case \"CHECK_DATA_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          totalSupply:action.payload.totalSupply,\r\n          cost: action.payload.cost,\r\n          supply: action.payload.supply,\r\n          numAva: action.payload.numAva,\r\n          error: false,\r\n          errorMsg: \"\",\r\n        };\r\n      case \"CHECK_DATA_FAILED\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          error: true,\r\n          errorMsg: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default dataReducer;","\r\n  \r\nimport { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    \r\n    try {\r\n      \r\n        let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.maxSupply().call();\r\n        let supply = await store.getState()\r\n        .blockchain.smartContract.methods.currentSupply().call();\r\n        let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.cost().call();\r\n        let numAva = await store.getState()\r\n        .blockchain.smartContract.methods.numAvailableToMint(account).call();\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          supply,\r\n          cost,\r\n          numAva,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};","\r\nexport const mainContract = JSON.parse('{\"CONTRACT_ADDRESS\": \"0xA5dd22145932B42699a5E9a3Fb65201C4Cd92512\"}');\r\nexport const configNetWorkID = '137';\r\nexport const mainContractAbi = JSON.parse('[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"SupplyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"}],\"name\":\"addListOfUsersToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addUserToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"givewayTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMintAmountPerTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"numAvailableToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newCost\",\"type\":\"uint256\"}],\"name\":\"setCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setOnlyWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newmaxMintAmount\",\"type\":\"uint256\"}],\"name\":\"setmaxMintAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelistedAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]');","import BuySection from \"./BuySection\";\r\n\r\nexport default BuySection;","import React, { useState, useEffect } from \"react\";\r\nimport { BuyContainer, BuyInput, MintButton } from \"./styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchData } from \"./../../../redux/data/dataActions\";\r\nimport { mainContract } from \"./../../../absolutePath\";\r\nconst BuySection = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [amount, setAmount] = useState(\"0\");\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n  const claimNFTs = () => {\r\n    const mintAmount = parseInt(amount);\r\n    if (mintAmount === 0 || !mintAmount) return;\r\n\r\n    let cost = data.cost;\r\n    let gasLimit = 300000;\r\n    let price = BigInt(cost * amount);\r\n    let totalCostWei = String(price);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(Number(amount))\r\n      .send({\r\n        to: mainContract.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n    getData();\r\n  };\r\n  return (\r\n    <BuyContainer>\r\n      <BuyInput\r\n        className= \"bold-text\"\r\n        placeholder ={'Amount:...'}\r\n        value={amount === '0' ? \"\" : amount}\r\n        onChange={(e) => {\r\n          console.log(data, parseInt(e.target.value) ,  parseInt(data.numAva) >= parseInt(e.target.value), parseInt(e.target.value) + parseInt(data.supply) <=  parseInt(data.totalSupply))\r\n          if(data && !isNaN(e.target.value) &&   parseInt(data.numAva) >= parseInt(e.target.value) && parseInt(e.target.value) + parseInt(data.supply) <=  parseInt(data.totalSupply))\r\n          setAmount(e.target.value);\r\n          if(e.target.value === '') setAmount('0');\r\n        }}\r\n      />\r\n      <div className =\"button mint-button w-button\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          {\r\n            claimingNft === false ? claimNFTs() : \"\";\r\n          }\r\n        }}\r\n      >\r\n        <strong className=\"bold-text\">Mint</strong>\r\n      </div>\r\n    </BuyContainer>\r\n  );\r\n};\r\n\r\nexport default BuySection;\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport {mainContract,mainContractAbi, configNetWorkID} from \"../../absolutePath\"\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abi = mainContractAbi;\r\n    const CONFIG = mainContract;\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == configNetWorkID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          \r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to POLYGON.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};","import React, {useEffect} from 'react'\r\nimport { connect } from \"./../../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./../../redux/data/dataActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ConnectButtonContainer, ConnectButtonText } from './styles';\r\nconst ConnectSection = () => {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const getData = () => {\r\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n            dispatch(fetchData(blockchain.account));\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getData();       \r\n    }, [blockchain.account]);\r\n  return (\r\n    <div className =\"button mint-button w-button\" onClick = {(e)=>{\r\n        e.preventDefault();\r\n        dispatch(connect());\r\n        getData();\r\n    }}>\r\n        <strong className=\"bold-text\">Connect</strong>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConnectSection","import styled from 'styled-components'\r\n\r\nexport const ConnectButtonContainer = styled.button`\r\n    border-radius: 10px;\r\n    padding:8px 20px;\r\n    border:0;\r\n    outline:0;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    background-image: linear-gradient(to bottom,rgba(255,255,255,.2) 0,rgba(255,255,255,.01) 100%);\r\n    background-color: #2a2a2a;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`;\r\nexport const ConnectButtonText = styled.p`\r\n    text-align: center;\r\n    color:white!important;\r\n    font-size:17px;\r\n    letter-spacing:0.3px;\r\n`;\r\n","import ConnectSection from \"./ConnectSection\";\r\n\r\nexport default ConnectSection;","import ButtonSection from \"./ButtonSection\";\r\n\r\nexport default ButtonSection;","import React, { useEffect, useMemo } from 'react'\r\nimport { ButtonSectionContainer, WarningMessage, Mintable } from './styles';\r\nimport { useSelector } from \"react-redux\";\r\nimport BuySection from './buy-section';\r\nimport ConnectSection from '../connect-section';\r\nconst ButtonSection = () => {\r\n    const data = useSelector(state =>state.data);\r\n    const totalSupply = useMemo(() =>{\r\n        return data.totalSupply\r\n    },[data])\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const maxSupply = 10000;\r\nif(!blockchain.account)\r\n return (\r\n    <ButtonSectionContainer >\r\n        <ConnectSection/>\r\n        {blockchain.errorMsg && <WarningMessage>{blockchain.errorMsg}</WarningMessage>}\r\n    </ButtonSectionContainer>\r\n   \r\n )\r\n  return (\r\n    <ButtonSectionContainer>\r\n        <Mintable className={\"bold-text\"}>{`You can mint ${data.numAva} more nfts`}</Mintable>\r\n        <BuySection maxSupply = {maxSupply} totalSupply = {totalSupply} />\r\n    </ButtonSectionContainer>\r\n  )\r\n}\r\n\r\nexport default ButtonSection","import React from 'react'\r\nimport ButtonSection from './components/button-section'\r\nconst App = (props) => {\r\n  return (\r\n    <div className='App'>\r\n        <ButtonSection/>\r\n    </div>\r\n  )\r\n}\r\nexport default App\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nif(document.getElementById(\"mintingButton\"))\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"mintingButton\")\r\n);\r\n"],"sourceRoot":""}